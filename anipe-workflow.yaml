main:
  params: [args]
  steps:
    - init:
        assign:
          - project_id: ${sys.get_env("GOOGLE_CLOUD_PROJECT_ID")}
          - bucket_name: "windsurf-anipe-data"  # Replace with your actual bucket name
          - timestamp: ${string(sys.now())}
          
    # Step 1: Call the Opportunity Identifier service
    - identifyOpportunity:
        call: http.post
        args:
          url: OPPORTUNITY_IDENTIFIER_URL/identify
          auth:
            type: OIDC
          body:
            query: "AI trends and opportunities"  # Optional search query
        result: opportunityResult
    
    # Log the identified opportunity
    - logOpportunity:
        call: sys.log
        args:
          text: "Opportunity identification completed - proceeding to product generation"
          severity: INFO
          
    # Step 2: Check if opportunity was successfully identified
    - checkOpportunity:
        switch:
          - condition: ${opportunityResult.body.status == "success"}
            next: generateProduct
          - condition: true  # default case
            next: handleError
            
    # Step 3: Call the Product Generator service with the identified opportunity
    - generateProduct:
        call: http.post
        args:
          url: PRODUCT_GENERATOR_URL/generate
          body:
            opportunity: ${opportunityResult.body}
          timeout: 300
        result: productResult

    # Step 3.5: Check if product generation was successful
    - checkProductResult:
        switch:
          - condition: ${productResult.body.status == "success"}
            next: generateSalesPage
          - condition: true  # default case
            next: handleError

    # Step 4: Call the Sales Page Generator service with the generated product
    - generateSalesPage:
        call: http.post
        args:
          url: SALES_PAGE_GENERATOR_URL/generate
          body:
            opportunity: ${opportunityResult.body}
            product_content: ${productResult.body.content}
          timeout: 300
        result: salesPageResult

    # Step 5: Store the results
    - storeResults:
        call: http.post
        args:
          url: https://storage.googleapis.com/upload/storage/v1/b/windsurf-anipe-data/o
          auth:
            type: OIDC
          query:
            uploadType: media
            name: ${"results/anipe_complete_" + string(sys.now()) + ".json"}
          headers:
            Content-Type: application/json
          body:
            timestamp: ${string(sys.now())}
            opportunity: ${opportunityResult.body}
            product_path: ${productResult.body.product_gcs_path}
            sales_page_url: ${default(salesPageResult.body.gcs_url, "not_generated")}
            status: "success"
          timeout: 60
        result: storeResult

    # Return the final result
    - returnResult:
        return:
          opportunity: ${opportunityResult.body}
          product_path: ${productResult.body.product_gcs_path}
          sales_page_url: ${default(salesPageResult.body.gcs_url, "not_generated")}
          status: "success"
          message: "ANIPE workflow completed successfully"
          
    # Handle errors
    - handleError:
        return:
          status: "error"
          message: "Failed to identify opportunities or generate products"
