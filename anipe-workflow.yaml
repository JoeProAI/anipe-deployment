main:
  params: [args]
  steps:
    - init:
        assign:
          - project_id: ${sys.get_env("GOOGLE_CLOUD_PROJECT_ID")}
          - bucket_name: "windsurf-anipe-data"  # Replace with your actual bucket name
          - timestamp: ${string(sys.now())}
          
    # Step 1: Call the Opportunity Identifier service
    - identifyOpportunity:
        call: http.post
        args:
          url: OPPORTUNITY_IDENTIFIER_URL/identify
          auth:
            type: OIDC
          body:
            query: "AI trends and opportunities"  # Optional search query
        result: opportunityResult
    
    # Log the identified opportunity
    - logOpportunity:
        call: sys.log
        args:
          text: '${"Identified opportunity: " + string(opportunityResult.body.opportunity.niche_topic)}'
          severity: INFO
          
    # Step 2: Check if opportunity was successfully identified
    - checkOpportunity:
        switch:
          - condition: ${opportunityResult.body.status == "success"}
            next: generateProduct
          - condition: true  # default case
            next: handleError
            
    # Step 3: Call the Product Generator service with the identified opportunity
    - generateProduct:
        call: http.post
        args:
          url: PRODUCT_GENERATOR_URL/generate
          auth:
            type: OIDC
          body:
            opportunity: ${opportunityResult.body.opportunity}
            gcs_path: ${opportunityResult.body.gcs_path}
        result: productResult
        
    # Log the generated product
    - logProduct:
        call: sys.log
        args:
          text: '${"Generated product at: " + string(productResult.body.product_gcs_path)}'
          severity: INFO
          
    # Return the final result
    - returnResult:
        return:
          opportunity: ${opportunityResult.body.opportunity}
          product_path: ${productResult.body.product_gcs_path}
          status: "success"
          message: "ANIPE workflow completed successfully"
          
    # Handle errors
    - handleError:
        return:
          status: "error"
          message: "Failed to identify opportunities or generate products"
