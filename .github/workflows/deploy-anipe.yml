name: Deploy ANIPE to Google Cloud Run

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: us-central1
  GCS_BUCKET_NAME: ${{ secrets.GCS_BUCKET_NAME }}

jobs:
  deploy:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Activate Service Account
      run: |
        gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
        gcloud config set project ${{ env.GCP_PROJECT_ID }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure gcloud
      run: |
        gcloud config set run/region $GCP_REGION

    - name: Enable APIs
      run: |
        gcloud services enable run.googleapis.com
        gcloud services enable cloudbuild.googleapis.com
        gcloud services enable artifactregistry.googleapis.com
        gcloud services enable cloudscheduler.googleapis.com
        gcloud services enable workflows.googleapis.com
        gcloud services enable aiplatform.googleapis.com
        gcloud services enable storage.googleapis.com

    - name: Build Opportunity Identifier Service
      run: gcloud builds submit --config cloudbuild-opportunity.yaml .

    - name: Build Product Generator Service
      run: gcloud builds submit --config cloudbuild-product.yaml .

    - name: Build Sales Page Generator Service
      run: gcloud builds submit --config cloudbuild-sales.yaml .

    - name: Deploy Opportunity Identifier Service
      run: |
        gcloud run deploy anip-opportunity-identifier \
          --image us-central1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/anipe-repo/anip-opportunity-identifier:latest \
          --platform managed \
          --region us-central1 \
          --allow-unauthenticated \
          --set-env-vars="GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}"

    - name: Deploy Product Generator Service
      run: |
        gcloud run deploy anip-product-generator \
          --image us-central1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/anipe-repo/anip-product-generator:latest \
          --platform managed \
          --region us-central1 \
          --allow-unauthenticated \
          --set-env-vars="GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}"

    - name: Deploy Sales Page Generator Service
      run: |
        gcloud run deploy anip-sales-page-generator \
          --image us-central1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/anipe-repo/anip-sales-page-generator:latest \
          --platform managed \
          --region us-central1 \
          --allow-unauthenticated \
          --set-env-vars="GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }},GCS_BUCKET_NAME=${{ env.GCS_BUCKET_NAME }}"

    - name: Create Sales Pages Bucket
      run: |
        gsutil mb gs://windsurf-anipe-sales-pages || echo "Bucket may already exist"
        gsutil iam ch allUsers:objectViewer gs://windsurf-anipe-sales-pages

    - name: Deploy Workflow
      run: |
        # Get the deployed service URLs
        OPPORTUNITY_URL=$(gcloud run services describe anip-opportunity-identifier --region=$GCP_REGION --format='value(status.url)')
        PRODUCT_URL=$(gcloud run services describe anip-product-generator --region=$GCP_REGION --format='value(status.url)')
        SALES_PAGE_URL=$(gcloud run services describe anip-sales-page-generator --region=$GCP_REGION --format='value(status.url)')
        
        # Update workflow YAML with actual URLs
        sed -i "s|OPPORTUNITY_IDENTIFIER_URL|$OPPORTUNITY_URL|g" anipe-workflow.yaml
        sed -i "s|PRODUCT_GENERATOR_URL|$PRODUCT_URL|g" anipe-workflow.yaml
        sed -i "s|SALES_PAGE_GENERATOR_URL|$SALES_PAGE_URL|g" anipe-workflow.yaml
        
        # Deploy the workflow
        gcloud workflows deploy anipe-workflow \
          --source=anipe-workflow.yaml \
          --location=$GCP_REGION

    - name: Create Scheduler Job
      run: |
        # Create scheduler job (will not fail if already exists)
        gcloud scheduler jobs create http anipe-daily-job \
          --schedule="0 2 * * *" \
          --http-method=POST \
          --uri="https://workflowexecutions-$GCP_REGION.googleapis.com/v1/projects/$PROJECT_ID/locations/$GCP_REGION/workflows/anipe-workflow/executions" \
          --headers="Authorization=Bearer $(gcloud auth print-access-token)" \
          --time-zone="America/New_York" \
          --location=$GCP_REGION || echo "Scheduler job already exists"
